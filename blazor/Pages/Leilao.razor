@page "/leilao/{LeilaoId}"
@inject HttpClient HttpClient
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager
@inject ILogger<Leilao> Logger
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

@using blazor.Models


<!-- CSS -->
<style>
    body {
        background-color: #f5f5dc; 
        margin: 0;
        padding: 20px;
        display: flex;
        flex-direction: column;
        align-items: center; 
    }
    .leilao-container {
        background-color: #f5f5dc; 
        padding: 20px;
        margin: 0 auto; 
        max-width: 800px; 
    }
    .detalhes-leilao {
        display: flex;
        align-items: flex-start;
        justify-content: space-between;
        margin-top: 20px;
    }

    .info-leilao {
        flex: 1;
        padding-right: 20px;
    }

    .imagem-leilao {
        flex: 1;
        text-align: center;
    }

    .produto-imagem {
        max-width: 300px;
        max-height: 300px;
        height: auto;
        border-radius: 4px;
        object-fit: contain;
        margin-top: 10px;
    }

    .form-group {
        margin-bottom: 15px;
    }

    label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
    }

    input[type="number"], .form-control {
        width: 100%;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 4px;
        box-sizing: border-box;
    }

    button {
        background-color: #007BFF;
        color: #fff;
        border: none;
        padding: 10px 20px;
        margin-top: 20px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        display: block;
        margin: 10px auto;
    }

        button:hover {
            background-color: #0056b3;
        }
</style>


<!-- HTML -->
<body>
    <div class="leilao-container">
        <h1>Detalhes do Leilão</h1>
        @if (response == null)
        {
            <p><em>A carregar detalhes do leilão...</em></p>
        }
        else
        {
            <div class="detalhes-leilao">
                <div class="info-leilao">
                    <h2>Informações do Produto</h2>
                    <ul>
                        <li>ID: @response.IdLeilao</li>
                        <li>Lance Atual: @response.LicitacaoAtual</li>
                        <li>Preço Mínimo: @response.PrecoMinLicitacao</li>
                        <li>Status: @response.Estado</li>
                        <li>Data de Início: @response.DataInicial</li>
                        <li>Data Final: @response.DataFinal</li>
                        <li>ID do Criador: @response.CriadorId</li>
                        <li>ID do Produto: @response.ProdutoId</li>
                    </ul>
                </div>

                <div class="imagem-leilao">
                    @if (!string.IsNullOrWhiteSpace(produto.Imagem))
                    {
                        <img src="@produto.Imagem" alt="Imagem do Produto" class="produto-imagem" />
                    }
                    else
                    {
                        <p><em>Imagem não disponível</em></p>
                    }
                </div>
            </div>

            <form @onsubmit="Licitar">
                <div class="form-group">
                    <label for="amount">Valor:</label>
                    <input type="number" class="form-control" id="amount" @bind="licitacao.Valor" />
                </div>
                <button type="submit">Licitar</button>
            </form>

            <button @onclick="GoBack">Página Inicial</button>
        }
    </div>
</body>


<!-- C# -->
@code {
    [Parameter]
    public string LeilaoId { get; set; }

    private HttpClient httpClient;
    private LeilaoModel response;
    private Licitacao licitacao = new Licitacao();
    private Licitacao responseLicitacao = new Licitacao();
    private ProdutoModel produto;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            httpClient = HttpClientFactory.CreateClient();
            httpClient.BaseAddress = new Uri("https://localhost:7295");
            response = await httpClient.GetFromJsonAsync<LeilaoModel>($"api/leilao/{LeilaoId}");
            produto = await httpClient.GetFromJsonAsync<ProdutoModel>($"api/produto/{response.ProdutoId}");
        }
        catch (HttpRequestException e) {Logger.LogError($"{e.Message}");}
    }

    private async Task Licitar()
    {
        httpClient = HttpClientFactory.CreateClient();
        httpClient.BaseAddress = new Uri("https://localhost:7295");
        var nif = await SharedMethods.GetNifFromToken(LocalStorage);

        licitacao.leilao_IdLeilao = int.Parse(LeilaoId);
        licitacao.user_Nif = nif;
        licitacao.dataLicitacao = DateTime.Now;

        var responseLicitacao = await httpClient.PostAsJsonAsync("api/licitacao", licitacao);
        if (responseLicitacao.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/paginicial");
        }
        else
        {
            NavigationManager.NavigateTo("/licitacaoError");

        }

    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/paginicial");
    }
    public class Licitacao
    {
        public decimal Valor { get; set; }
        public int leilao_IdLeilao { get; set; }
        public string user_Nif { get; set; }
        public DateTime dataLicitacao { get; set; }
    }
}
