@page "/paginicial"
@inject HttpClient HttpClient
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager
@inject ILogger<Login> Logger

@using blazor.Models

<h1>Leilões</h1>

@if (response == null)
{
    <p><em>Carregando...</em></p>
}
else
{
    <div>
        @foreach (var leilao in response)
        {
            <button @onclick="() => NavigateToLeilao(leilao.LeilaoId)" class="leilao-button">
                @leilao.LeilaoId - @leilao.NomeItem - @leilao.ValorAtualLicitacao
            </button>
        }
    </div>

    <button @onclick="CriarLeilao">Criar Leilao</button>
    <button @onclick="VerPerfil">Perfil</button>
    <button @onclick="VerStats">Estatísticas</button>
    <button @onclick="GoBack">Voltar</button>

}

    

@code {
    private HttpClient httpClient;
    private IEnumerable<PaginicialModel> response;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            httpClient = HttpClientFactory.CreateClient();
            httpClient.BaseAddress = new Uri("https://localhost:7295");
            response = await httpClient.GetFromJsonAsync<IEnumerable<PaginicialModel>>("api/home");


            //NavigationManager.NavigateTo("/paginicial");
        }
            
        catch (HttpRequestException e)
        {
            Logger.LogError($"Erro ao obter leilões: {e.Message}");
            // Tratamento de erro, como navegação para uma página de erro
        }
    }

    private void NavigateToLeilao(int leilaoId)
    {
        NavigationManager.NavigateTo($"/leilao/{leilaoId}");
    }

    private void CriarLeilao()
    {
        NavigationManager.NavigateTo("/criarLeilao");
    
    }

    private void VerPerfil()
    {
        NavigationManager.NavigateTo("/verPerfil");
    }

    private void VerStats()
    {
        NavigationManager.NavigateTo("/verStats");
    }
    
    // Voltar
    private void GoBack()
    {
        NavigationManager.NavigateTo("/");
    }
}
