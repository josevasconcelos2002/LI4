@page "/login"
@inject HttpClient HttpClient
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager
@inject ILogger<Login> Logger
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager

@using blazor.Models


<style>
    body {
        background-color: #f5f5dc; /* Bege claro */
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 100vh; /* Altura da viewport */
        margin: 0;
    }
    .autenticacao-container {
        background-color: #f5f5dc; /* Bege claro */
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); /* Sombra suave */
        width: 300px;
        margin: 0 auto; /* Centralizar horizontalmente */
        text-align: center;
    }

    .autenticacao-label {
        font-weight: bold;
    }

    .autenticacao-input {
        width: 100%;
        padding: 10px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 3px;
    }

    .autenticacao-button {
        background-color: #007BFF; /* Azul */
        color: #fff;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
    }

        .autenticacao-button:hover {
            background-color: #0056b3; /* Azul mais escuro ao passar o mouse */
        }
</style>

<div class="autenticacao-container">
    <h3>Autenticação</h3>
    <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
        <div>
            <label for="username" class="autenticacao-label">Nome de Utilizador:</label>
            <InputText @bind-Value="@loginModel.Username" id="username" class="autenticacao-input" />
        </div>
        <div>
            <label for="password" class="autenticacao-label">Palavra-passe:</label>
            <InputText @bind-Value="@loginModel.Password" id="password" type="password" class="autenticacao-input" />
        </div>
        <button type="submit" class="autenticacao-button">Login</button>
    </EditForm>
    <br>
    <button @onclick="GoBack" class="autenticacao-button">Voltar</button>
</div>




@code {
    private LoginModel loginModel = new LoginModel();
    private HttpClient httpClient;

    protected override void OnInitialized()
    {
        httpClient = HttpClientFactory.CreateClient();
        httpClient.BaseAddress = new Uri("https://localhost:7295");
    }

    private async Task HandleLogin()
    {
        var response = await httpClient.PostAsJsonAsync("api/utilizador/login", loginModel);

        if (response.IsSuccessStatusCode)
        {
            var responseContent = await response.Content.ReadAsStringAsync();
            var tokenResponse = await response.Content.ReadFromJsonAsync<Dictionary<string, string>>();
            await LocalStorage.SetItemAsync("jwt_token", tokenResponse["token"]);

            var userType = await SharedMethods.GetUserTypeFromToken(LocalStorage);

            if (userType == "1")
            {
                NavigationManager.NavigateTo("/paginicialAdmin");
            }
            else
            {
                NavigationManager.NavigateTo("/paginicial");
            }
        }
        else
        {
            Logger.LogError($"{response}");
            NavigationManager.NavigateTo("/loginError");
        }
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/");
    }
}
